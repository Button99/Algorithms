{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/user/WebstormProjects/Algorithms_Project/src/screens/HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport data from \"../data\";\nimport { Accordion, Button, Card } from \"react-bootstrap\";\n\nfunction HomeScreen(props) {\n  _s();\n\n  useEffect(() => {\n    //\n    return () => {//\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hello! I am using this project to learn how to use bootstrap, and to see how many algorithms I can learn from this project!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is a simple test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), data.algorithms.map(algorithm => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        defaultActiveKey: \"0\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n              as: Button,\n              variant: \"link\",\n              eventKey: \"1\",\n              children: algorithm.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            eventKey: \"1\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"new-line\",\n                children: algorithm.algo.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this)\n    }, algorithm._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HomeScreen, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = HomeScreen;\nexport default HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["/home/user/WebstormProjects/Algorithms_Project/src/screens/HomeScreen.js"],"names":["React","useEffect","Link","data","Accordion","Button","Card","HomeScreen","props","algorithms","map","algorithm","name","algo","replace","_id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAAQC,SAAR,EAAmBC,MAAnB,EAA2BC,IAA3B,QAAsC,iBAAtC;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAEvBP,EAAAA,SAAS,CAAC,MAAM;AACZ;AAEA,WAAO,MAAM,CACT;AACH,KAFD;AAGH,GANQ,CAAT;AAOA,sBAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIQE,IAAI,CAACM,UAAL,CAAgBC,GAAhB,CAAoBC,SAAS,iBACzB;AAAA,6BAEI,QAAC,SAAD;AAAW,QAAA,gBAAgB,EAAC,GAA5B;AAAA,+BACI,QAAC,IAAD;AAAA,kCACI,QAAC,IAAD,CAAM,MAAN;AAAA,mCACI,QAAC,SAAD,CAAW,MAAX;AAAkB,cAAA,EAAE,EAAEN,MAAtB;AAA8B,cAAA,OAAO,EAAC,MAAtC;AAA6C,cAAA,QAAQ,EAAC,GAAtD;AAAA,wBACMM,SAAS,CAACC;AADhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI,QAAC,SAAD,CAAW,QAAX;AAAoB,YAAA,QAAQ,EAAC,GAA7B;AAAA,mCACI,QAAC,IAAD,CAAM,IAAN;AAAA,qCAAW,QAAC,IAAD,CAAM,IAAN;AAAW,gBAAA,SAAS,EAAC,UAArB;AAAA,0BAAiCD,SAAS,CAACE,IAAV,CAAeC,OAAf,CAAuB,iBAAvB,EAA0C,MAA1C;AAAjC;AAAA;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ,OAAUH,SAAS,CAACI,GAApB;AAAA;AAAA;AAAA;AAAA,YADJ,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA2BH;;GApCQR,U;;KAAAA,U;AAsCT,eAAeA,UAAf","sourcesContent":["import React, {useEffect} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport data from \"../data\";\nimport {Accordion, Button, Card} from \"react-bootstrap\";\n\nfunction HomeScreen(props) {\n\n    useEffect(() => {\n        //\n\n        return () => {\n            //\n        };\n    })\n    return (\n\n        <div className=\"container\">\n            <p>Hello! I am using this project to learn how to use bootstrap, and to see how many algorithms I can learn from this project!</p>\n            <p>This is a simple test</p>\n            {\n                data.algorithms.map(algorithm =>\n                    <div key={algorithm._id}>\n\n                        <Accordion defaultActiveKey=\"0\">\n                            <Card>\n                                <Card.Header>\n                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                                        { algorithm.name }\n                                    </Accordion.Toggle>\n                                </Card.Header>\n                                <Accordion.Collapse eventKey=\"1\">\n                                    <Card.Body><Card.Text className=\"new-line\">{algorithm.algo.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>')}</Card.Text></Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                        </Accordion>\n                    </div>)\n\n            }\n        </div>\n\n    )\n}\n\nexport default HomeScreen;"]},"metadata":{},"sourceType":"module"}