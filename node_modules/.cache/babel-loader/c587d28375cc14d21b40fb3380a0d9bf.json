{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/user/WebstormProjects/Algorithms_Project/src/screens/ArrayMainScreen.js\";\nimport React from \"react\";\nimport data from \"../data\";\n\nfunction ArrayMainScreen(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"algorithms\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select an algorithm you want to see!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), data.algorithms.map(algorithm => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        defaultActiveKey: \"0\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n              as: Button,\n              variant: \"link\",\n              eventKey: \"0\",\n              children: \"Click me!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            eventKey: \"0\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: \"Hello! I'm the body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n              as: Button,\n              variant: \"link\",\n              eventKey: \"1\",\n              children: \"Click me!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            eventKey: \"1\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: \"Hello! I'm another body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }, this)\n    }, algorithm._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ArrayMainScreen;\nexport default ArrayMainScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArrayMainScreen\");","map":{"version":3,"sources":["/home/user/WebstormProjects/Algorithms_Project/src/screens/ArrayMainScreen.js"],"names":["React","data","ArrayMainScreen","props","algorithms","map","algorithm","Button","_id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAE5B,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQF,IAAI,CAACG,UAAL,CAAgBC,GAAhB,CAAoBC,SAAS,iBACzB;AAAA,6BAEI,QAAC,SAAD;AAAW,QAAA,gBAAgB,EAAC,GAA5B;AAAA,gCACI,QAAC,IAAD;AAAA,kCACI,QAAC,IAAD,CAAM,MAAN;AAAA,mCACI,QAAC,SAAD,CAAW,MAAX;AAAkB,cAAA,EAAE,EAAEC,MAAtB;AAA8B,cAAA,OAAO,EAAC,MAAtC;AAA6C,cAAA,QAAQ,EAAC,GAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI,QAAC,SAAD,CAAW,QAAX;AAAoB,YAAA,QAAQ,EAAC,GAA7B;AAAA,mCACI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI,QAAC,IAAD;AAAA,kCACI,QAAC,IAAD,CAAM,MAAN;AAAA,mCACI,QAAC,SAAD,CAAW,MAAX;AAAkB,cAAA,EAAE,EAAEA,MAAtB;AAA8B,cAAA,OAAO,EAAC,MAAtC;AAA6C,cAAA,QAAQ,EAAC,GAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI,QAAC,SAAD,CAAW,QAAX;AAAoB,YAAA,QAAQ,EAAC,GAA7B;AAAA,mCACI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,OAAUD,SAAS,CAACE,GAApB;AAAA;AAAA;AAAA;AAAA,YADJ,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH;;KArCQN,e;AAuCT,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport data from \"../data\";\n\nfunction ArrayMainScreen(props) {\n\n    return (\n        <div className=\"algorithms\">\n            <p>Select an algorithm you want to see!</p>\n            {\n                data.algorithms.map(algorithm =>\n                    <div key={algorithm._id}>\n\n                        <Accordion defaultActiveKey=\"0\">\n                            <Card>\n                                <Card.Header>\n                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                                        Click me!\n                                    </Accordion.Toggle>\n                                </Card.Header>\n                                <Accordion.Collapse eventKey=\"0\">\n                                    <Card.Body>Hello! I'm the body</Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                            <Card>\n                                <Card.Header>\n                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                                        Click me!\n                                    </Accordion.Toggle>\n                                </Card.Header>\n                                <Accordion.Collapse eventKey=\"1\">\n                                    <Card.Body>Hello! I'm another body</Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                        </Accordion>\n                </div>)\n\n            }\n        </div>\n\n    )\n}\n\nexport default ArrayMainScreen;"]},"metadata":{},"sourceType":"module"}